{"version":3,"sources":["../../../src/cli/app.spec.ts"],"sourcesContent":["import { command, run } from 'cmd-ts'\nimport { app } from './app.ts'\nimport { APP_NAME, APP_VERSION } from '@constants'\nimport { account } from './account.tsx'\nimport stripAnsi from 'strip-ansi'\n\nvi.mock('./account.tsx', () => {\n  const mockCommand = command({\n    name: 'account',\n    args: {},\n    handler: vi.fn(),\n  })\n\n  return {\n    account: mockCommand,\n  }\n})\n\nvi.spyOn(console, 'log')\n\nbeforeEach(() => {\n  vi.resetAllMocks()\n  vi.mocked(console.log).mockReset()\n  vi.stubGlobal('process', {\n    exit: vi.fn(),\n  })\n})\n\ndescribe('the app command', () => {\n  it('returns the correct version when supplied the --version flag', async () => {\n    await run(app, ['--version'])\n\n    expect(console.log).toHaveBeenCalledWith(APP_VERSION)\n  })\n\n  it('has been configured with the correct command', async () => {\n    await run(app, ['account'])\n    expect(account.handler).toBeCalled()\n  })\n\n  it('returns the correct name when passing the --help', async () => {\n    vi.spyOn(console, 'log')\n\n    await run(app, ['--help'])\n\n    const output = vi.mocked(console.log).mock.calls[0][0]\n\n    expect(stripAnsi(output)).toEqual(`${APP_NAME} <subcommand>\n\nwhere <subcommand> can be one of:\n\n- account\n\nFor more help, try running \\`${APP_NAME} <subcommand> --help\\``)\n  })\n})\n"],"names":["command","run","app","APP_NAME","APP_VERSION","account","stripAnsi","vi","mock","mockCommand","name","args","handler","fn","spyOn","console","beforeEach","resetAllMocks","mocked","log","mockReset","stubGlobal","exit","describe","it","expect","toHaveBeenCalledWith","toBeCalled","output","calls","toEqual"],"mappings":"AAAA,SAASA,OAAO,EAAEC,GAAG,QAAQ,SAAQ;AACrC,SAASC,GAAG,mBAAkB;AAC9B,SAASC,QAAQ,EAAEC,WAAW,QAAQ,kBAAY;AAClD,SAASC,OAAO,uBAAuB;AACvC,OAAOC,eAAe,aAAY;AAElCC,GAAGC,IAAI,CAAC,iBAAiB;IACvB,MAAMC,cAAcT,QAAQ;QAC1BU,MAAM;QACNC,MAAM,CAAC;QACPC,SAASL,GAAGM,EAAE;IAChB;IAEA,OAAO;QACLR,SAASI;IACX;AACF;AAEAF,GAAGO,KAAK,CAACC,SAAS;AAElBC,WAAW;IACTT,GAAGU,aAAa;IAChBV,GAAGW,MAAM,CAACH,QAAQI,GAAG,EAAEC,SAAS;IAChCb,GAAGc,UAAU,CAAC,WAAW;QACvBC,MAAMf,GAAGM,EAAE;IACb;AACF;AAEAU,SAAS,mBAAmB;IAC1BC,GAAG,gEAAgE;QACjE,MAAMvB,IAAIC,KAAK;YAAC;SAAY;QAE5BuB,OAAOV,QAAQI,GAAG,EAAEO,oBAAoB,CAACtB;IAC3C;IAEAoB,GAAG,gDAAgD;QACjD,MAAMvB,IAAIC,KAAK;YAAC;SAAU;QAC1BuB,OAAOpB,QAAQO,OAAO,EAAEe,UAAU;IACpC;IAEAH,GAAG,oDAAoD;QACrDjB,GAAGO,KAAK,CAACC,SAAS;QAElB,MAAMd,IAAIC,KAAK;YAAC;SAAS;QAEzB,MAAM0B,SAASrB,GAAGW,MAAM,CAACH,QAAQI,GAAG,EAAEX,IAAI,CAACqB,KAAK,CAAC,EAAE,CAAC,EAAE;QAEtDJ,OAAOnB,UAAUsB,SAASE,OAAO,CAAC,CAAC,EAAE3B,SAAS;;;;;;6BAMrB,EAAEA,SAAS,sBAAsB,CAAC;IAC7D;AACF"}