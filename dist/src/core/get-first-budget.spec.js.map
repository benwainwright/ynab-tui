{"version":3,"sources":["../../../src/core/get-first-budget.spec.ts"],"sourcesContent":["import { mock } from 'vitest-mock-extended'\nimport { getFirstBudget } from './get-first-budget.ts'\nimport { API, BudgetsApi, BudgetSummary, BudgetSummaryResponse } from 'ynab'\n\nvi.mock('ynab')\n\nafterEach(() => {\n  vi.resetAllMocks()\n})\n\ndescribe('get first budget', () => {\n  it('given a working API will call the API and return the first budget it finds', async () => {\n    const mockBudgets = mock<BudgetsApi>()\n\n    const mockApi = mock<API>({\n      budgets: mockBudgets,\n    })\n\n    const budgetOne = mock<BudgetSummary>()\n    const budgetTwo = mock<BudgetSummary>()\n\n    const response = mock<BudgetSummaryResponse>({\n      data: {\n        budgets: [budgetOne, budgetTwo],\n      },\n    })\n\n    mockBudgets.getBudgets.mockResolvedValue(response)\n\n    const budget = await getFirstBudget(mockApi)\n\n    expect(budget).toEqual(budgetOne)\n  })\n})\n"],"names":["mock","getFirstBudget","vi","afterEach","resetAllMocks","describe","it","mockBudgets","mockApi","budgets","budgetOne","budgetTwo","response","data","getBudgets","mockResolvedValue","budget","expect","toEqual"],"mappings":"AAAA,SAASA,IAAI,QAAQ,uBAAsB;AAC3C,SAASC,cAAc,gCAA+B;AAGtDC,GAAGF,IAAI,CAAC;AAERG,UAAU;IACRD,GAAGE,aAAa;AAClB;AAEAC,SAAS,oBAAoB;IAC3BC,GAAG,8EAA8E;QAC/E,MAAMC,cAAcP;QAEpB,MAAMQ,UAAUR,KAAU;YACxBS,SAASF;QACX;QAEA,MAAMG,YAAYV;QAClB,MAAMW,YAAYX;QAElB,MAAMY,WAAWZ,KAA4B;YAC3Ca,MAAM;gBACJJ,SAAS;oBAACC;oBAAWC;iBAAU;YACjC;QACF;QAEAJ,YAAYO,UAAU,CAACC,iBAAiB,CAACH;QAEzC,MAAMI,SAAS,MAAMf,eAAeO;QAEpCS,OAAOD,QAAQE,OAAO,CAACR;IACzB;AACF"}