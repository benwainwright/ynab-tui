{"version":3,"sources":["../../../src/core/get-api.spec.ts"],"sourcesContent":["import { API } from 'ynab'\nimport { getApi } from './get-api.ts'\nimport { when } from 'vitest-when'\nimport { mock } from 'vitest-mock-extended'\n\nvi.mock('ynab')\n\nafterEach(() => {\n  vi.resetAllMocks()\n})\n\ndescribe('get api', () => {\n  it('calls the auth strategy, passes it the API then returns the result', async () => {\n    const authStrategy = vi.fn().mockResolvedValue('token')\n    const mockApi = mock<API>()\n\n    when(vi.mocked(API)).calledWith('token').thenReturn(mockApi)\n\n    const result = await getApi(authStrategy)\n\n    expect(result).toBe(mockApi)\n  })\n})\n"],"names":["API","getApi","when","mock","vi","afterEach","resetAllMocks","describe","it","authStrategy","fn","mockResolvedValue","mockApi","mocked","calledWith","thenReturn","result","expect","toBe"],"mappings":"AAAA,SAASA,GAAG,QAAQ,OAAM;AAC1B,SAASC,MAAM,uBAAsB;AACrC,SAASC,IAAI,QAAQ,cAAa;AAClC,SAASC,IAAI,QAAQ,uBAAsB;AAE3CC,GAAGD,IAAI,CAAC;AAERE,UAAU;IACRD,GAAGE,aAAa;AAClB;AAEAC,SAAS,WAAW;IAClBC,GAAG,sEAAsE;QACvE,MAAMC,eAAeL,GAAGM,EAAE,GAAGC,iBAAiB,CAAC;QAC/C,MAAMC,UAAUT;QAEhBD,KAAKE,GAAGS,MAAM,CAACb,MAAMc,UAAU,CAAC,SAASC,UAAU,CAACH;QAEpD,MAAMI,SAAS,MAAMf,OAAOQ;QAE5BQ,OAAOD,QAAQE,IAAI,CAACN;IACtB;AACF"}