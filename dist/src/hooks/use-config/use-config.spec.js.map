{"version":3,"sources":["../../../../src/hooks/use-config/use-config.spec.ts"],"sourcesContent":["import { ONE_PASSWORD_REFERENCE } from '@constants'\nimport { onePasswordAuthStrategy } from '@core'\nimport { AuthStrategy } from '@types'\nimport { mock } from 'vitest-mock-extended'\nimport { when } from 'vitest-when'\nimport { useConfig } from './use-config.ts'\nvi.mock('@core')\n\ndescribe('use config', () => {\n  it('should return a config object with the op auth strategy', () => {\n    const mockAuthStrategy = mock<AuthStrategy>()\n\n    when(onePasswordAuthStrategy)\n      .calledWith(ONE_PASSWORD_REFERENCE)\n      .thenReturn(mockAuthStrategy)\n\n    const config = useConfig()\n\n    expect(config.apiAuthStrategy).toBe(mockAuthStrategy)\n  })\n})\n"],"names":["ONE_PASSWORD_REFERENCE","onePasswordAuthStrategy","mock","when","useConfig","vi","describe","it","mockAuthStrategy","calledWith","thenReturn","config","expect","apiAuthStrategy","toBe"],"mappings":"AAAA,SAASA,sBAAsB,QAAQ,qBAAY;AACnD,SAASC,uBAAuB,QAAQ,sBAAO;AAE/C,SAASC,IAAI,QAAQ,uBAAsB;AAC3C,SAASC,IAAI,QAAQ,cAAa;AAClC,SAASC,SAAS,0BAAyB;AAC3CC,GAAGH,IAAI,CAAC;AAERI,SAAS,cAAc;IACrBC,GAAG,2DAA2D;QAC5D,MAAMC,mBAAmBN;QAEzBC,KAAKF,yBACFQ,UAAU,CAACT,wBACXU,UAAU,CAACF;QAEd,MAAMG,SAASP;QAEfQ,OAAOD,OAAOE,eAAe,EAAEC,IAAI,CAACN;IACtC;AACF"}